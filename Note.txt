
- Using Spring Boot

3. Configuration Classes
  @Configuration 用于定义配置类，可替换XML配置文件，被注解的类内部包含一个或多个@Bean注解方法。

6. Using the @SpringBootApplication Annotation
  @SpringBootApplication包含以下三个注解:
  1.@EnableAutoConfiguration: enable Spring Boot’s auto-configuration mechanism
  2.@ComponentScan: enable @Component scan on the package where the application is located (see the best practices)
  3.@Configuration: allow to register extra beans in the context or import additional configuration classes


- Spring Boot Features

1.2. Lazy Initialization
  延迟初始化：默认情况下，在刷新应用程序上下文时，将创建上下文中的每个bean并注入其依赖。相反，如果将bean定义配置为延迟初始化时，它就不会被创建，并且直到需要时才注入其依赖。
  spring.main.lazy-initialization=true

1.3. Customizing the Banner
  Inside your banner.txt file, you can use any of the following placeholders:
  ${application.version}        #在MANIFEST.MF中声明的应用程序的版本号，例如，Implementation-Version:1.0被打印为1.0
  ${application.title}

1.6. Application Events and Listeners
  自定义监听器：
  创建META-INF/spring.factories
  添加org.springframework.context.ApplicationListener=com.example.project.MyListener

  Application events are sent in the following order, as your application runs:
    1.ApplicationStartingEvent：springboot应用启动且未作任何处理（除listener注册和初始化）的时候发送ApplicationStartingEvent
    2.ApplicationEnvironmentPreparedEvent：确定springboot应用使用的Environment且context创建之前发送这个事件
    3.ApplicationContextInitializedEvent is sent when the ApplicationContext is prepared and ApplicationContextInitializers have been called but before any bean definitions are loaded.
    4.ApplicationPreparedEvent is sent just before the refresh is started but after bean definitions have been loaded.
    5.ApplicationStartedEvent is sent after the context has been refreshed but before any application and command-line runners have been called.
    6.ApplicationReadyEvent is sent after any application and command-line runners have been called. It indicates that the application is ready to service requests.
    7.ApplicationFailedEvent is sent if there is an exception on startup.
  The above list only includes SpringApplicationEvents that are tied to a SpringApplication. In addition to these, the following events are also published after ApplicationPreparedEvent and before ApplicationStartedEvent:
    1.A ContextRefreshedEvent is sent when an ApplicationContext is refreshed.
    2.A WebServerInitializedEvent is sent after the WebServer is ready. ServletWebServerInitializedEvent and ReactiveWebServerInitializedEvent are the servlet and reactive variants respectively.

stop at 1.7. Web Environment